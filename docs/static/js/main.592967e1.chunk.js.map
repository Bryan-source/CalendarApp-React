{"version":3,"sources":["types/types.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","components/auth/LoginScreen.js","actions/events.js","actions/ui.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/ui/Navbar.js","helpers/calendar-massages-es.js","components/calendar/CalendarEvent.js","components/calendar/CalendarModal.js","components/calendar/CalendarScreen.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","events","id","Date","getTime","title","start","moment","toDate","end","add","bgcolor","notes","user","_id","name","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","LoginScreen","className","placeholder","value","eventClearActiveEvent","uiOpenModal","AddNewFab","dispatch","useDispatch","onClick","DeleteEventFab","Navbar","useSelector","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","nowPlus1","clone","initEvent","CalendarModal","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","target","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","eventAddNew","onChange","minDate","autoComplete","rows","locale","localizer","momentLocalizer","CalendarScreen","localStorage","getItem","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","setItem","onSelectSlot","selectable","view","components","AppRouter","exact","path","component","to","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.592967e1.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event]  Event updated',\r\n    eventDeleted: '[event] Event deleted'\r\n}","import moment from 'moment';\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    events: [{\r\n        id: new Date().getTime(),\r\n        title: \"Tarea de prueba\",\r\n        start: moment().toDate(),\r\n        end: moment().add(2, 'hours').toDate(),\r\n        bgcolor: '#fafafa',\r\n        notes: 'DescripciÃ³n de tarea',\r\n        user: {\r\n            _id: '123',\r\n            name: 'Usuario'\r\n        }\r\n    }],\r\n\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n    \r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: {\r\n                    /* obtiene todos los elementos dentro del payload */\r\n                    ...action.payload\r\n                }\r\n            }\r\n        \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        \r\n        /* Editar un evento */\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    /* recibe el formValues activo como event del payload */\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        \r\n            /* Elminar un evento*/\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id) \r\n                ),\r\n\r\n                activeEvent: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","/* EL rootReducer se encarga de combinar todos los reducers en uno  */\r\n\r\nimport {combineReducers} from 'redux';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport {uiReducer} from './uiReducer';\r\n\r\n/* combineReducers: Debido a que el createStore Ãºnicamente recibe un sÃ³lo reducer con el combineReducers hacemos que reciba mÃ¡s de uno. */\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    //TODO: AuthReducer\r\n    \r\n})","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n/* \r\nSe crea un createStore el cual recibe las acciones para devolver un reducer.\r\n */\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"ContraseÃ±a\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"ContraseÃ±a\" \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseÃ±a\" \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\n/* Al cerrar el modal debe limpiarse el activeEvent volviendo a ser null para evitar problemas */\r\n/* RelaciÃ³n con el CalendarModal.js calendarReducer.js */\r\nexport const eventClearActiveEvent = () => ({type: types.eventClearActiveEvent});\r\n\r\n\r\n/* Editar un evento */\r\n/* RelaciÃ³n con el CalendarModal.js calendarReducer.js */\r\nexport const eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n\r\n/* Eliminar un evento */\r\nexport const eventDeleted = () => ({type: types.eventDeleted});","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({type: types.uiOpenModal});\r\nexport const uiCloseModal = () => ({type: types.uiCloseModal});\r\n\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux';\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handdleOpenModal = () => {\r\n        dispatch(uiOpenModal());\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n    return (\r\n        <button \r\n            className = \"btn btn-primary fab\"\r\n            onClick = {handdleOpenModal}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventDeleted());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AddNewFab } from './AddNewFab'\r\nimport { DeleteEventFab } from './DeleteEventFab'\r\n\r\n\r\nexport const Navbar = () => {\r\n    const {activeEvent} = useSelector( state => state.calendar );\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            {/* <span className=\"navbar-brand\">\r\n                Bryan\r\n            </span> */}\r\n            {\r\n                <AddNewFab/>\r\n            }\r\n\r\n            {/* <button className=\"btn btn-outline-danger\">\r\n            <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button> */}\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el dÃ­a',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'DÃ­a',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver mÃ¡s (${total})`\r\n};","import React from 'react'\r\n\r\n/* Recibe los parÃ¡metros del objeto event definido en el CalendarScreen.js */\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>-{user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","/* Clase 307 react hooks */\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventAddNew, eventClearActiveEvent, eventUpdated } from '../../actions/events';\r\n\r\n\r\n/* Sirve para centrar el modal en la pantalla */\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\n\r\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\r\n/* Hace referencia de donde se va a mostrar el modal en este caso en el root que se encuentra en el index.html del proyecto */\r\nModal.setAppElement('#root');\r\n\r\n/* Define el dÃ­a de hoy aÃ±ade una hora mÃ¡s a la actual add porque se estÃ¡ estableciendo una tarea futura */\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    \r\n    /* useSelector useDispatch */\r\n    const {modalOpen} = useSelector( state => state.ui );\r\n    const {activeEvent} = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    /* useState */\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    /* No se usa useForm pero recoge los valores del formulario tal cual*/\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const {title, notes, start, end} = formValues;\r\n\r\n\r\n    /* useEffect se utiliza para obtener los valores del evento activo y que estos se muestren en el formulario del modal cuando se abra */\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            /* AquÃ­ formValues toma todos los valores del objeto activeEvent incluyendo el id */\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            /* Esto es necesario porque al momento de seleccionar un evento y eliminarlo, al querer crear otro evento, el formValue conservÃ³ los valores del Ãºltimo activeEvent */\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value /* No guarda las fechas pero estas se manejas de forma independiente en su handleDateChange */\r\n        })\r\n        \r\n    }\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal(modalOpen));\r\n        setFormValues(initEvent);\r\n\r\n        /* Debe limpiar el evento activo y ponerlo en null al cerrar la modal de esa manera se evitan errores */\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    /* Captura la fecha inicial */\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n\r\n        /* Captura y guarda la fecha en formValues */\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    /* Captura la fecha final */\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        /* Captura y guarda la fecha en formValues */\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        /* Valida que la fecha inicial no sea exactamente la misma ni mayor a la final */\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha de inicio no puede ser mayor a la fecha final', 'error');\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        /* EDITAR o AGREGAR un nuevo evento */\r\n        /* Si no hay algÃºn evento activo entonces es porque se estÃ¡ creando una nota nueva de otro modo si lo hay, entonces se estÃ¡ editando el que estÃ¡ activo*/\r\n        if (activeEvent) {\r\n            /* el formValues de inicio no tiene un id como para ser igualado con los eventos que si tienen entonces cÃ³mo es que se usa este objeto para comparar? */\r\n            /* formValues obtiene los valores del activeEvent incluyendo el id cuando pasa por el useEffect por eso se usa el formValues que funciona como el argumento para hacer la comparaciÃ³n en el calendarReducer */\r\n            dispatch(eventUpdated(formValues));\r\n        }else {\r\n            dispatch(eventAddNew({\r\n                ...formValues,\r\n                id: new Date().getTime(),\r\n                user: {\r\n                    _id: '123',\r\n                    name: 'Usuario'\r\n                }\r\n            }))\r\n        }\r\n        \r\n        //TODO: Realizar la grabaciÃ³n en la base de datos\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        \r\n        <Modal\r\n            isOpen={modalOpen}\r\n            /* onAfterOpen={afterOpenModal} */\r\n            onRequestClose={closeModal}/* Cierra el modal al hacer click afuera de la pantalla */\r\n            style={customStyles}\r\n            closeTimeoutMS={200} /* Aplica 200ms para que se ejecute una transiciÃ³n suave al cerrarse, esto estÃ¡ definido en styles.css */\r\n\r\n            /* Se aplican las clases que hacen referencia en el archivo de styles.css */\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\" /* Es un estilo propio no de la librerÃ­a */\r\n            /* contentLabel=\"Example Modal\" */\r\n        >\r\n            \r\n            <h1> {(activeEvent)? 'Editar evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n                >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n\r\n                    {/* Tiene un estilo en styles.css que creamos para desaparecer los bordes y quedarnos con el estilo del form-control  */}\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart} /* Valida que esta fecha no sea menor que la dateStart */\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"TÃ­tulo del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripciÃ³n corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">InformaciÃ³n adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block mb-2\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n            \r\n            \r\n        </Modal>\r\n        \r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\n\r\n/* ImportaciÃ²n para cambiar el idioma a espaÃ±ol del calendar */\r\nimport { messages } from '../../helpers/calendar-massages-es';\r\n\r\n/* En este import estÃ¡ todo el estilo del calendario para que se vea ordenado */\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\n/* ImportaciÃ²n para cambiar el idioma a espaÃ±ol de las fechas del moment */\r\nimport 'moment/locale/es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n/* Estos events funcionan como parÃ¡metros para establecer una tarea */\r\n/* const events = [{\r\n    title: \"CumpleaÃ±os\",\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    bgcolor: '#fafafa',\r\n    notes: 'Comprar el pastel',\r\n    user: {\r\n        _id: '123',\r\n        name: 'Bryan'\r\n    }\r\n}] */\r\nexport const CalendarScreen = () => {\r\n    \r\n    const {events, activeEvent} = useSelector( state => state.calendar );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /* lastView hace referencia a la Ãºltima visulizaciÃ³n del usuario en el calendario la cual es almacenada en el local storage para que al abrir el calendario esta le muestro en la Ãºltima secciÃ³n que se quedÃ³, si no se guardÃ³ en el localStorage entonces va a mostrar la secciÃ³n de month */\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n        //dispatch(eventSetActive(e));\r\n    }\r\n\r\n    /* Este se llama cuando se dÃ¡ un sÃ³lo click */\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    /* Este se llama cuando se cambia la vista en el calendario devuelve el nombre de la vista que se quedÃ³ */\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    /* Detecta si se da click fuera del evento y lo desactiva poniendo el activeEvent =null para ocultar el botÃ³n de delete */\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n    /* Toma los parÃ¡metros del calendar como son event, start, end, isSelected para mofificarlos en este caso se aplica un estilo propio general */\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: '#367CF7',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n    return (\r\n        /* La secciÃ³n Month no muestra su diseÃ±o como deberÃ­a y esto es debido a que no ocupa todo el ancho de la pantalla por esta razÃ³n se le aplica este estilo  */\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                \r\n                /* Obtiene el estilo definido para cambiar el aspecto del calendar */\r\n                eventPropGetter={eventStyleGetter}\r\n\r\n                onDoubleClickEvent = {onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n\r\n                /* tanto onSelectSlot como slectable de necesita para Detecta si se da click fuera del evento y lo desactiva poniendo el activeEvent =null para ocultar el botÃ³n de delete */ \r\n                onSelectSlot = {onSelectSlot}\r\n                selectable = {true}\r\n\r\n                /* Se especifica que la vista que va tener cuando ingresemos a la pÃ¡gina es el lastView */\r\n                view={lastView}\r\n\r\n                components={{\r\n                    /* Recive CalendarEvent.js como referencia */\r\n                    /* En CalendarEvent se especifica lo que va a mostrar el recuadro de la tarea que se ubica en los diferentes dÃ­as */\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            {/* Implementar una vez se hayan creado la base de datos */}\r\n            {/* <AddNewFab/>\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab/>\r\n            } */}\r\n            \r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/login\" component ={LoginScreen}/>\r\n                    <Route exact path=\"/\" component ={CalendarScreen}/>\r\n\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport {store} from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store= {store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {CalendarApp} from './CalendarApp'\n\nimport './styles.css';\n\nReactDOM.render( \n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}